var userModel = require('./userModel');
var bcrypt =require('bcrypt');

module.exports.createUserDBService = (userDetails) => {


   return new Promise(function myFn(resolve, reject) {

       var userModelData = new userModel();

       userModelData.email = userDetails.email;
       userModelData.firstName = userDetails.firstName;
       userModelData.lastName = userDetails.lastName;
       userModelData.password = userDetails.password;
       userModelData.streetaddress = userDetails.streetaddress;
       userModelData.city = userDetails.city;
       userModelData.region = userDetails.region;
       userModelData.postalcode = userDetails.postalcode;
       bcrypt.hash(userDetails.password, 10, function(err, hash){
         userModelData.password = hash;
         userModelData.save(function resultHandle(error, result) {
            if (error) {
                reject(false);
            } else {
                resolve(true);
            }
        });
       });
   });

}

module.exports.loginuserDBService = (userDetails)=> 
{
   return new Promise(function myFn(resolve, reject) 
   {
      userModel.findOne({ email: userDetails.email},function getresult(errorvalue, result)
      {
         if(errorvalue)
         {
            reject({status: false, msg: "Invaild Data"});
         }
         else
         {
            console.log(result)
            bcrypt.compare(userDetails.password, result.password, function(err, rst){

               if(rst){
                  resolve({status: true, msg: "user Validated Successfully"});

               }else{
                  reject({status: false, msg: "user Validated failed"});
               }
         });
         }
      
      });
      
   });
}